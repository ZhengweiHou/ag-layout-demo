// Code generated by agservice. DO NOT EDIT!!!
// Code generated by agservice. DO NOT EDIT!!!
// Code generated by agservice. DO NOT EDIT!!!
//
// GenScope: service
// Generate time: 2025-09-19 16:58:27
// Versions:
//   - agservice: v0.0.1
//   - protoc: v6.31.1
// Source:
//   - api/hzw/hellostreaming.proto

package svcgen

import (
	smw "ag-core/ag/ag_ext"
	hzw "ag-layout-demo/api/hzw"
	service "ag-layout-demo/internal/service"
	"context"
	slog "log/slog"
)

// HelloStreamProxy 服务代理
type HelloStreamProxy struct {
	impl     *service.HelloStreamImpl
	handlers map[string]smw.HandlerFunc
}

// NewHelloStreamProxy 创建HelloStreamProxy
func NewHelloStreamProxy(service *service.HelloStreamImpl, mws []smw.PrioritizedMiddleware) hzw.HelloStream {
	proxy := &HelloStreamProxy{
		impl:     service,
		handlers: make(map[string]smw.HandlerFunc),
	}

	// 注册处理链
	proxy.handlers["NoStreaming"] = smw.RegisterHandler("NoStreaming", mws, func(ctx context.Context, req interface{}) (interface{}, error) {
		return proxy.impl.NoStreaming(ctx, req.(*hzw.Request))
	})
	// FIXME ClientSideStreaming 流式接口暂不支持代理
	// FIXME ServerSideStreaming 流式接口暂不支持代理
	// FIXME BidiSideStreaming 流式接口暂不支持代理

	return proxy
}

// NoStreaming HelloStreamProxy proxy
func (p *HelloStreamProxy) NoStreaming(ctx context.Context, req *hzw.Request) (*hzw.Response, error) {
	methodName := "NoStreaming"
	handler := p.handlers[methodName]

	res, err := handler(ctx, req)
	if err != nil {
		slog.Error("failed to handle request!", "method", methodName, "error", err)
		return nil, err
	}

	return res.(*hzw.Response), nil
}

// ClientSideStreaming HelloStreamProxy proxy ClientStreaming
func (p *HelloStreamProxy) ClientSideStreaming(stream hzw.HelloStream_ClientSideStreamingServer) error {
	// FIXME 流式接口暂不支持代理，直接调用实现
	return p.impl.ClientSideStreaming(stream)
}

// ServerSideStreaming HelloStreamProxy proxy ServerStreaming
func (p *HelloStreamProxy) ServerSideStreaming(req *hzw.Request, stream hzw.HelloStream_ServerSideStreamingServer) error {
	// FIXME 流式接口暂不支持代理，直接调用实现
	return p.impl.ServerSideStreaming(req, stream)
}

// BidiSideStreaming HelloStreamProxy proxy ClientStreaming ServerStreaming
func (p *HelloStreamProxy) BidiSideStreaming(stream hzw.HelloStream_BidiSideStreamingServer) error {
	// FIXME 流式接口暂不支持代理，直接调用实现
	return p.impl.BidiSideStreaming(stream)
}
