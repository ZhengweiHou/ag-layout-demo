// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
//
// GenScope: service
// Generate time: 2025-09-19 16:58:27
// Versions:
//   - aghertz: v0.0.1
//   - hertz: v0.10.0
//   - protoc: v6.31.1
// Source:
//   - api/hzw/hzw.proto

package hzwhello

import (
	client "ag-core/ag/ag_hertz/client"
	hzw "ag-layout-demo/api/hzw"
	"context"
	config "github.com/cloudwego/hertz/pkg/common/config"
)

// HzwHelloHertzClient is the hertz client for HzwHello.
type HzwHelloHertzClient interface {
	// HelloHzw
	HelloHzw(ctx context.Context, req *hzw.HzwRequest, opts ...config.RequestOption) (resp *hzw.HzwReply, err error)
	// HelloHzwStream is streaming method
}

// NewHzwHelloHertzClient is the constructor for HzwHelloHertzClient.
func NewHzwHelloHertzClient(hc *client.Client) HzwHelloHertzClient {
	return &HzwHelloHertzClientImpl{
		hc: hc,
	}
}

// HzwHelloHertzClientImpl is the hertz client impl for HzwHello.
type HzwHelloHertzClientImpl struct {
	hc *client.Client
}

// HelloHzw client impl HelloHzw
func (c *HzwHelloHertzClientImpl) HelloHzw(ctx context.Context, req *hzw.HzwRequest, opts ...config.RequestOption) (*hzw.HzwReply, error) {
	var resp hzw.HzwReply
	path := "/v1/hzw/hello/:Name"

	pathVars := make(map[string]string)
	pathVars["Name"] = req.GetName()
	err := c.hc.Invoke(ctx, "GET", path, pathVars, nil, &resp.Msg, opts...)
	if err != nil {
		return nil, err
	}
	return &resp, nil
}

// HelloHzwStream is streaming method
