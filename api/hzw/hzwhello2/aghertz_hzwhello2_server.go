// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
//
// GenScope: service
// Generate time: 2025-09-19 16:58:27
// Versions:
//   - aghertz: v0.0.1
//   - hertz: v0.10.0
//   - protoc: v6.31.1
// Source:
//   - api/hzw/hzw2.proto

package hzwhello2

import (
	server "ag-core/ag/ag_hertz/server"
	hzw "ag-layout-demo/api/hzw"
	"context"
	app "github.com/cloudwego/hertz/pkg/app"
	consts "github.com/cloudwego/hertz/pkg/protocol/consts"
)

// Register_HzwHello2_HelloHzw2_0_GET_Hertz
// @Name: HelloHzw2
// @Method: GET
// @Path: /v2/hzw/hello/:Name
func Register_HzwHello2_HelloHzw2_0_GET_Hertz(s hzw.HzwHello2) server.Option {
	return server.WithRoute(&server.Route{
		HttpMethod:   "GET",
		RelativePath: "/v2/hzw/hello/:Name",
		Handlers:     append(make([]app.HandlerFunc, 0), _HzwHello2_HelloHzw2_0_HTTP_Handler(s)),
	})
}

func _HzwHello2_HelloHzw2_0_HTTP_Handler(s hzw.HzwHello2) func(ctx context.Context, c *app.RequestContext) {
	return func(ctx context.Context, c *app.RequestContext) {
		//var in = new(hzw.HzwRequest2)
		var in hzw.HzwRequest2
		// 无Body定义的方法，BindQuery，否则使用BindByContentType
		if err := c.BindQuery(&in); err != nil {
			c.String(consts.StatusBadRequest, err.Error())
			return
		}
		if err := c.BindPath(&in); err != nil {
			c.String(consts.StatusBadRequest, err.Error())
			return
		}

		resp, err := s.HelloHzw2(ctx, &in)
		if err != nil {
			// TODO 增强异常处理
			c.String(consts.StatusInternalServerError, err.Error())
			return
		}

		// c.JSON 会自动将 Content-Type 设置为 application/json,
		c.JSON(consts.StatusOK, resp.Msg)
	}
}

// Register_HzwHello2_HelloHzw2_1_GET_Hertz
// @Name: HelloHzw2
// @Method: GET
// @Path: /v2/hello/get2
func Register_HzwHello2_HelloHzw2_1_GET_Hertz(s hzw.HzwHello2) server.Option {
	return server.WithRoute(&server.Route{
		HttpMethod:   "GET",
		RelativePath: "/v2/hello/get2",
		Handlers:     append(make([]app.HandlerFunc, 0), _HzwHello2_HelloHzw2_1_HTTP_Handler(s)),
	})
}

func _HzwHello2_HelloHzw2_1_HTTP_Handler(s hzw.HzwHello2) func(ctx context.Context, c *app.RequestContext) {
	return func(ctx context.Context, c *app.RequestContext) {
		//var in = new(hzw.HzwRequest2)
		var in hzw.HzwRequest2
		// 无Body定义的方法，BindQuery，否则使用BindByContentType
		if err := c.BindQuery(&in); err != nil {
			c.String(consts.StatusBadRequest, err.Error())
			return
		}

		resp, err := s.HelloHzw2(ctx, &in)
		if err != nil {
			// TODO 增强异常处理
			c.String(consts.StatusInternalServerError, err.Error())
			return
		}

		// c.JSON 会自动将 Content-Type 设置为 application/json,
		c.JSON(consts.StatusOK, resp.Msg)
	}
}

// Register_HzwHello2_HelloHzw2_2_GET_Hertz
// @Name: HelloHzw2
// @Method: GET
// @Path: /v2/hzw/hello2/:Name
func Register_HzwHello2_HelloHzw2_2_GET_Hertz(s hzw.HzwHello2) server.Option {
	return server.WithRoute(&server.Route{
		HttpMethod:   "GET",
		RelativePath: "/v2/hzw/hello2/:Name",
		Handlers:     append(make([]app.HandlerFunc, 0), _HzwHello2_HelloHzw2_2_HTTP_Handler(s)),
	})
}

func _HzwHello2_HelloHzw2_2_HTTP_Handler(s hzw.HzwHello2) func(ctx context.Context, c *app.RequestContext) {
	return func(ctx context.Context, c *app.RequestContext) {
		//var in = new(hzw.HzwRequest2)
		var in hzw.HzwRequest2
		// 无Body定义的方法，BindQuery，否则使用BindByContentType
		if err := c.BindQuery(&in); err != nil {
			c.String(consts.StatusBadRequest, err.Error())
			return
		}
		if err := c.BindPath(&in); err != nil {
			c.String(consts.StatusBadRequest, err.Error())
			return
		}

		resp, err := s.HelloHzw2(ctx, &in)
		if err != nil {
			// TODO 增强异常处理
			c.String(consts.StatusInternalServerError, err.Error())
			return
		}

		// c.JSON 会自动将 Content-Type 设置为 application/json,
		c.JSON(consts.StatusOK, resp.Msg)
	}
}

// Register_HzwHello2_HelloHzw2_3_POST_Hertz
// @Name: HelloHzw2
// @Method: POST
// @Path: /v2/hzw/hello3
func Register_HzwHello2_HelloHzw2_3_POST_Hertz(s hzw.HzwHello2) server.Option {
	return server.WithRoute(&server.Route{
		HttpMethod:   "POST",
		RelativePath: "/v2/hzw/hello3",
		Handlers:     append(make([]app.HandlerFunc, 0), _HzwHello2_HelloHzw2_3_HTTP_Handler(s)),
	})
}

func _HzwHello2_HelloHzw2_3_HTTP_Handler(s hzw.HzwHello2) func(ctx context.Context, c *app.RequestContext) {
	return func(ctx context.Context, c *app.RequestContext) {
		//var in = new(hzw.HzwRequest2)
		var in hzw.HzwRequest2
		// BindByContentType 当Method为GET时，会自动调用BindQuery，其他方法会调用对应Bind
		if err := c.BindByContentType(&in); err != nil {
			c.String(consts.StatusBadRequest, err.Error())
			return
		}

		resp, err := s.HelloHzw2(ctx, &in)
		if err != nil {
			// TODO 增强异常处理
			c.String(consts.StatusInternalServerError, err.Error())
			return
		}

		// c.JSON 会自动将 Content-Type 设置为 application/json,
		c.JSON(consts.StatusOK, resp)
	}
}

// FIXME HzwHello2.HelloHzwStream2 is streaming method
