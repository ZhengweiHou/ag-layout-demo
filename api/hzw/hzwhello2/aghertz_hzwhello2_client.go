// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
//
// GenScope: service
// Generate time: 2025-09-19 16:58:27
// Versions:
//   - aghertz: v0.0.1
//   - hertz: v0.10.0
//   - protoc: v6.31.1
// Source:
//   - api/hzw/hzw2.proto

package hzwhello2

import (
	client "ag-core/ag/ag_hertz/client"
	hzw "ag-layout-demo/api/hzw"
	"context"
	config "github.com/cloudwego/hertz/pkg/common/config"
)

// HzwHello2HertzClient is the hertz client for HzwHello2.
type HzwHello2HertzClient interface {
	// HelloHzw2
	HelloHzw2(ctx context.Context, req *hzw.HzwRequest2, opts ...config.RequestOption) (resp *hzw.HzwReply2, err error)
	// HelloHzwStream2 is streaming method
}

// NewHzwHello2HertzClient is the constructor for HzwHello2HertzClient.
func NewHzwHello2HertzClient(hc *client.Client) HzwHello2HertzClient {
	return &HzwHello2HertzClientImpl{
		hc: hc,
	}
}

// HzwHello2HertzClientImpl is the hertz client impl for HzwHello2.
type HzwHello2HertzClientImpl struct {
	hc *client.Client
}

// HelloHzw2 client impl HelloHzw2
func (c *HzwHello2HertzClientImpl) HelloHzw2(ctx context.Context, req *hzw.HzwRequest2, opts ...config.RequestOption) (*hzw.HzwReply2, error) {
	var resp hzw.HzwReply2
	path := "/v2/hzw/hello/:Name"

	pathVars := make(map[string]string)
	pathVars["Name"] = req.GetName()
	err := c.hc.Invoke(ctx, "GET", path, pathVars, nil, &resp.Msg, opts...)
	if err != nil {
		return nil, err
	}
	return &resp, nil
}

// HelloHzwStream2 is streaming method
