// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
// Code generated by aghertz. DO NOT EDIT!!!
//
// GenScope: service
// Generate time: 2025-09-19 16:58:27
// Versions:
//   - aghertz: v0.0.1
//   - hertz: v0.10.0
//   - protoc: v6.31.1
// Source:
//   - api/logs/logapi.proto

package logserver

import (
	client "ag-core/ag/ag_hertz/client"
	logs "ag-layout-demo/api/logs"
	"context"
	config "github.com/cloudwego/hertz/pkg/common/config"
)

// LogServerHertzClient is the hertz client for LogServer.
type LogServerHertzClient interface {
	// BatchLog
	BatchLog(ctx context.Context, req *logs.BatchLogRequest, opts ...config.RequestOption) (resp *logs.BatchLogResponse, err error)
	// StreamLog is streaming method
}

// NewLogServerHertzClient is the constructor for LogServerHertzClient.
func NewLogServerHertzClient(hc *client.Client) LogServerHertzClient {
	return &LogServerHertzClientImpl{
		hc: hc,
	}
}

// LogServerHertzClientImpl is the hertz client impl for LogServer.
type LogServerHertzClientImpl struct {
	hc *client.Client
}

// BatchLog client impl BatchLog
func (c *LogServerHertzClientImpl) BatchLog(ctx context.Context, req *logs.BatchLogRequest, opts ...config.RequestOption) (*logs.BatchLogResponse, error) {
	var resp logs.BatchLogResponse
	path := "/v1/logs/batch"

	pathVars := make(map[string]string)
	err := c.hc.Invoke(ctx, "POST", path, pathVars, req, &resp, opts...)
	if err != nil {
		return nil, err
	}
	return &resp, nil
}

// StreamLog is streaming method
