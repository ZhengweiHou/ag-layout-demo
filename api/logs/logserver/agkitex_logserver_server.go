// Code generated by agkitex. DO NOT EDIT!!!
// Code generated by agkitex. DO NOT EDIT!!!
// Code generated by agkitex. DO NOT EDIT!!!
//
// GenScope: service
// Generate time: 2025-09-19 16:58:27
// Versions:
//   - agkitex: v0.0.1
//   - kitex: v0.14.1
//   - protoc: v6.31.1
// Source:
//   - api/logs/logapi.proto

package logserver

import (
	akserver "ag-core/ag/ag_kitex/server"
	logs "ag-layout-demo/api/logs"
	server "github.com/cloudwego/kitex/server"
)

// NewServer creates a server.Server with the given handler and options.
func NewServer(handler logs.LogServer, opts ...server.Option) server.Server {
	var options []server.Option
	options = append(options, opts...)

	svr := server.NewServer(options...)
	if err := svr.RegisterService(serviceInfo(), handler); err != nil {
		panic(err)
	}
	return svr
}

func RegisterService(svr server.Server, handler logs.LogServer, opts ...server.RegisterOption) error {
	return svr.RegisterService(serviceInfo(), handler, opts...)
}

// Register_LogServer_KitexServer ag_kitex service register.
func Register_LogServer_KitexServer(srv logs.LogServer) akserver.Option {
	return akserver.WithServiceRegistrar(&akserver.ServiceRegistrar{
		ServiceInfo: NewServiceInfo(),
		Handler:     srv,
	})
}
